name: CI/CD Pipeline

on:  
  push:
  pull_request:
  workflow_dispatch:
 
jobs:
  test:
    runs-on: ubuntu-latest
     
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install -r ./.venv/requirements.txt

      - name: Run database manager tests
        run: pytest ./.venv/test_database_manager.py

  build-and-push:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install dependencies
        run: pip install -r ./.venv/requirements.txt

      - name: Build and push Docker image - Microservice
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice:latest -f ./.venv/Dockerfile.micro .
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice:latest
      - name: Build and push Docker image - Showusers
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/showusers:latest -f ./.venv/Dockerfile.showusers .
          docker push ${{ secrets.DOCKER_USERNAME }}/showusers:latest
  build-and-push-to-yc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: pip install -r ./.venv/requirements.txt
      - name: Build docker image
        run:  |
          docker build . --file ./.venv/Dockerfile.micro --tag cr.yandex/${{secrets.YC_REGISTRY_ID }}/microservice:latest
          #docker build . --file ./.venv/Dockerfile.showusers --tag cr.yandex/${{secrets.YC_REGISTRY_ID }}/showusers:latest
      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
           registry: cr.yandex
           username: json_key
           password: ${{ secrets.YC_KEYS }}
      - name: Push tag to YC Registry
        run: |
         docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/microservice:latest 
         #docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/showusers:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push-to-yc]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/microservice:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
